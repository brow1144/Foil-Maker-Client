import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

/**
 * Created by Nicholas on 10/24/2016.
 */
public class FoilMakerController implements ActionListener{
    private static FoilMakerController controller;
    private static FoilMakerView view;
    private static FoilMakerModel model;

    public String Register(String username,String password){
        String response;
        response = getResponse("CREATENEWUSER--" + username +"--"+ password);
        return response;
        //response = response.replace("RESPONSE--CREATENEWUSER--","");
        //return response.replace("--","");
    }

    public String getResponse(String messageToServer){
        String serverIP = "localhost";
        int serverPort = 6000;
        try {
            // Connect to server
            Socket socket = new Socket(serverIP, serverPort);

            // Create data writer
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            // Create data reader
            InputStreamReader isr = new InputStreamReader(socket.getInputStream());
            BufferedReader in = new BufferedReader(isr);
            // Send message to server
            out.println(messageToServer);

            // Read server response
            String serverMessage = in.readLine();
            return serverMessage;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static void main(String[] args) {
        controller = new FoilMakerController();
        model = new FoilMakerModel();
        view = new FoilMakerView(controller);
    }
    public void handleButtonAction(ActionEvent e) {
        JButton button = (JButton) e.getSource();
        String buttonText = button.getText();
        String response;

        if(buttonText.equals("Register")){
            response = Register(view.usernameTextField.getText(),view.passwordTextField.getText());
            System.out.println(response);
            if(response.contains("SUCCESS")){
                view.goToNewGamePanel();
            } else if(response.contains("INVALIDUSERNAME") || response.contains("INVALIDMESSAGEFORMAT")){
                JOptionPane.showMessageDialog(null,"Error: Must enter a username and password.",
                        "Error: Register",JOptionPane.ERROR_MESSAGE);
            } else if(response.contains("USERALREADYEXISTS")) {
                JOptionPane.showMessageDialog(null, "Error: User Already Exists.",
                        "Error: Register", JOptionPane.ERROR_MESSAGE);
            } 
        }
    }

    public void actionPerformed(ActionEvent e) {
        Object source = e.getSource();
        if (source instanceof JButton) {
            handleButtonAction(e);
        }
    }
}
